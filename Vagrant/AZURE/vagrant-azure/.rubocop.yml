AllCops:
  TargetRubyVersion: 2.2
  # RuboCop a un tas de flics activés par défaut. 
  # Ce paramètre indique à RuboCop de les ignorer, de sorte que seuls ceux définis explicitement dans ce fichier sont activés.
  DisabledByDefault: true

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# N'utilisez pas d'accolades pour les littéraux de hachage lorsqu'ils sont le dernier argument 
# d'un appel de méthode.
Style/BracesAroundHashParameters:
  Enabled: true

# Alignez `when` avec `case`.
Style/CaseIndentation:
  Enabled: true

# Alignez les commentaires avec les définitions de méthode.
Style/CommentIndentation:
  Enabled: true

# Pas de lignes vides supplémentaires.
Style/EmptyLines:
  Enabled: true

# Dans une définition de classe normale, pas de lignes vides autour du corps.
Style/EmptyLinesAroundClassBody:
  Enabled: true

# Dans une définition de méthode régulière, pas de lignes vides autour du corps.
Style/EmptyLinesAroundMethodBody:
  Enabled: true

# Dans une définition de module standard, pas de lignes vides autour du corps.
Style/EmptyLinesAroundModuleBody:
  Enabled: true

# Utilisez la syntaxe Ruby >= 1.9 pour les hachages. Préférez { a: :b } à { :a => :b }.
Style/HashSyntax:
  Enabled: true

# Les définitions de méthode après les appels isolés "privés" ou "protégés" nécessitent un
# niveau d'indentation supplémentaire.
Style/IndentationConsistency:
  Enabled: true
  EnforcedStyle: rails

# Deux espaces, pas de tabulation (pour l'indentation).
Style/IndentationWidth:
  Enabled: true

Style/SpaceAfterColon:
  Enabled: true

Style/SpaceAfterComma:
  Enabled: true

Style/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Style/SpaceAroundKeyword:
  Enabled: true

Style/SpaceAroundOperators:
  Enabled: true

Style/SpaceBeforeFirstArg:
    Enabled: true

# Définir une méthode avec des paramètres nécessite des parenthèses.
Style/MethodDefParentheses:
  Enabled: true

# Utilisez `foo {}` et non `foo{}`.
Style/SpaceBeforeBlockBraces:
  Enabled: true

# Utilisez `foo {bar}` et non `foo {bar}`.
Style/SpaceInsideBlockBraces:
  Enabled: true

# Utilisez `{ a : 1 }` et non `{a:1}`.
Style/SpaceInsideHashLiteralBraces:
  Enabled: true

Style/SpaceInsideParens:
  Enabled: true

# Vérifiez l'utilisation des quotes conformément à la règle ci-dessous.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

# Détecter les onglets durs, pas d'onglets durs.
Style/Tab:
  Enabled: true

# Les lignes vides ne doivent pas avoir d'espaces.
Style/TrailingBlankLines:
  Enabled: true

# Aucun espace de fin.
Style/TrailingWhitespace:
  Enabled: true

# Utilisez des guillemets pour les littéraux de chaîne lorsqu'ils sont suffisants.
Style/UnneededPercentQ:
  Enabled: true

# Alignez `end` avec le mot-clé correspondant ou l'expression de début, sauf pour les 
# affectations, où il doit être aligné avec le LHS.
Lint/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

# Utilisez my_method(my_arg) et non my_method( my_arg ) ou my_method my_arg.
Lint/RequireParentheses:
  Enabled: true
